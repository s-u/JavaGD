#!/bin/sh

PNAME=JavaGD
SWD=`pwd`
echo "Removing previous dist ..."
rm -rf /tmp/${PNAME}
echo "Copying package base ..."
cp -r ../${PNAME} /tmp

rm -f /tmp/${PNAME}/mkdist

cd /tmp/${PNAME}

if [ -e /tmp/${PNAME}/configure ]; then
    echo "Note: autoreconf is *not* ran automatically if configure exists."
    echo "      Run it manually if necessary."
else
    echo "Running autoreconf ..."
    autoreconf
    rm -rf autom4te*
fi
if [ ! -e configure ]; then
    echo "*** ERROR: unable to create configure"
    exit 1
fi

echo Finding out lowest supported Java target ...
for JAVA_VER_TARGET in 1.1 1.2 1.4 1.6 1.7 8 11 13; do
    if javac -target ${JAVA_VER_TARGET} -source ${JAVA_VER_TARGET} -d /tmp/ tools/getsp.java 2>/dev/null; then break; fi
    echo Java ${JAVA_VER_TARGET} ... not supported
    JAVA_VER_TARGET=
done

if [ -z "${JAVA_VER_TARGET}" ]; then
    echo "ERROR: no working Java compiler found!" >&2
    exit 1
fi

echo Java ${JAVA_VER_TARGET} ... OK
export JAVA_VER_TARGET

if [ ! -e tools/getsp.class ]; then
    echo "Compiling getsp.class"
    ( cd tools && javac -target ${JAVA_VER_TARGET} -source ${JAVA_VER_TARGET} getsp.java )
fi

echo "Removing SVN/CVS and backup stuff ..."
rm -rf `find . -name CVS -or -name .svn -or -name \*~`

if [ ! -e src/java/javaGD.jar ]; then
    echo "Compiling javaGD Java sources"
    if [ ! -e src/java/Makefile ]; then
	rm -rf src/java
	mkdir src/java 2> /dev/null
	if [ -z "${ORGPATH}" ]; then
	    DEFAULTSRC=$SWD/../../../org/rosuda/javaGD
	else
	    DEFAULTSRC="${ORGPATH}/rosuda/javaGD"
	fi
	: ${JAVASRC=$DEFAULTSRC}
	if [ ! -e "$JAVASRC/GDInterface.java" ]; then
	    echo "*** ERROR: cannot find javaGD sources in $JAVASRC ***"
	    echo "Please set JAVASRC to the directory containing javaGD sources"
	    exit 1
	fi
	cp "$JAVASRC/"*.java src/java/
	cp "$JAVASRC/Makefile" src/java/
    fi

    make -C src/java "JFLAGS=-source ${JAVA_VER_TARGET} -target ${JAVA_VER_TARGET}"
    if [ $? != 0 ]; then
	exit 1
    fi
    mkdir -p inst/java
    mv src/java/javaGD.jar inst/java
    make -C src/java clean
    echo "see JavaGD/src/java in the package for Java sources" > inst/java/README
fi

echo "Updating version ..."
VER=`sed -n -e 's/.*JavaGD v\([0-9.-]\{1,\}\).*/\1/p' src/javaGD.h`
echo "JavaGD version ${VER}"
cat DESCRIPTION| sed "s/Version:.*/Version: ${VER}/" > d && mv d DESCRIPTION
## keep CRAN happy
rm version
echo "Creating package ..."
cd ..
R CMD build ${PNAME}
cd ${SWD}
cp /tmp/${PNAME}_${VER}.tar.gz ..
rm -rf /tmp/${PNAME}
echo "Done."
ls -l ../${PNAME}_${VER}.tar.gz
